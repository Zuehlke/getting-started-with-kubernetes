apiVersion: v1
kind: Namespace
metadata:
  name: website
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: website
  name: website
  namespace: website
spec:
  replicas: 2
  selector:
    matchLabels:
      app: website
  template:
    metadata:
      labels:
        app: website
    spec:
      containers:
# kubectl cp index.html  website/website-...:/app/
      - image: bitnami/apache:latest
        name: apache
        volumeMounts:
        - mountPath: /app
          name: data-volume
        ports:
        - containerPort: 443
        - containerPort: 80 
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          httpGet:
            port: 80
            path: /

      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: website
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: website
  namespace: website
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/kind/
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: website
  namespace: website
  labels:
    app: website
spec:
  storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

--- 
apiVersion: v1
kind: Service
metadata:
  labels:
    app: website
  name: website
  namespace: website
spec:
  ports:
  - name: port-1
    port: 443
    protocol: TCP
    targetPort: 8443
  - name: port-2
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: website
  type: ClusterIP
--- 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: website-ingress
  namespace: website
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: website
            port:
              number: 8080
---

